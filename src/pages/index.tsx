import { RouterOutputs, api } from '@/utils/api'
import { SignInButton, useUser } from '@clerk/nextjs'
import { type NextPage } from 'next'
import Head from 'next/head'

import { LoadingSpinner } from '@/components/Spinner'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import Image from 'next/image'
dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser()
  console.log(user)

  if (!user) return null

  return (
    <div className='flex w-full gap-3 p-2'>
      <Image
        src={user.profileImageUrl}
        alt='Profile picture'
        className='h-20 w-20 rounded-full'
        width={80}
        height={80}
      />
      <input
        placeholder='Type some idea!'
        className='grow bg-transparent text-violet-100 outline-none placeholder:text-violet-200'
      />
    </div>
  )
}

type PostWithUser = RouterOutputs['post']['getAll'][number]

const PostView = (props: PostWithUser) => {
  const { post, user } = props
  return (
    <div
      className='flex flex-row items-center gap-3 border-b border-slate-300 p-5'
      key={post.id}
    >
      <Image
        src={user.pfp}
        alt='Profile picture'
        className='h-12 w-12 rounded-full'
        width={48}
        height={48}
      />
      <div className='flex flex-col '>
        <div className='flex gap-2 text-violet-200 hover:cursor-pointer hover:text-violet-400'>
          <span>{`@${user.username}`}</span>{' '}
          <span>{`Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const data = api.post.getAll.useQuery()
  if (data.isLoading || true) return <LoadingSpinner />

  if (!data.data) return null

  return (
    <div className='flex'>
      {data.data.length === 0 ? (
        <div className='text-white'>No posts available.</div>
      ) : (
        <div className='flex w-full flex-col'>
          {data.data.map((fullPost) => (
            <PostView {...fullPost} key={fullPost.post.id} />
          ))}
        </div>
      )}
    </div>
  )
}

const Home: NextPage = (props) => {
  api.post.getAll.useQuery()
  const user = useUser()

  if (!user.isLoaded) return <LoadingSpinner />

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name='description' content='Generated by create-t3-app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className='flex h-screen justify-center '>
        <div className='w-full border-x border-slate-400 md:max-w-2xl'>
          <div className='flex justify-center border-b border-slate-400 px-1 py-4'>
            {user.isSignedIn ? <CreatePostWizard /> : <SignInButton />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  )
}

export default Home
